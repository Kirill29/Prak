@{
    ViewBag.Title = "Рамка,нарисованная";
}
<!DOCTYPE html>
<html>

<head>
    <meta charset=utf-8 />
    <meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no' />
    <script src='~/js/mapbox.js' type="text/javascript"></script>
    <link href='~/css/mapbox.css' rel='stylesheet' />
    <link rel='stylesheet' href='~/css/leaflet.draw.css' />
    <script src='~/js/leaflet.draw.js' type="text/javascript"></script>
    <script src="/js/turf.js" type="text/javascript"></script>
    <style>
        .btn {
            font-size: 15px;
            background-color: #a9a9a9;
            border: 3px solid #a9a9a9;
            border-radius: 10px;
        }

        #map {
            margin: 5px 0px 5px 0px;
            width: 100%;
            height: 500px;
        }

        #delete {
            position: absolute;
            top: 90px;
            right: 30px;
            z-index: 100;
            background: white;
            color: black;
            padding: 6px;
            border-radius: 4px;
            font-family: 'Helvetica Neue';
            cursor: pointer;
            font-size: 15px;
            text-decoration: none;
        }

        #export {
            margin: 5px 0px 5px 0px;
        }
    </style>
</head>
<body>
    <div>

        <div id='map'></div>
        <button id='delete' type="button" class="btn btn-danger">Очистить карту</button>

        <div class="form-group">


            <form asp-action="Add_Draw" asp-controller="Ramka" method="post" enctype="multipart/form-data">
                <input type="text" placeholder="Введите название для рамки" class="form-control" name="cmr_name_value_draw" id="cmr_name_value_draw" />
                <input type="hidden" id="geo_multiPolygon" value="null" name="geometry_multiPolgon" />
                <input type="hidden" id="geo_multiLineString" value="null" name="geometry_multiLineString" />
                <input type="hidden" id="geo_multiPoint" value="null" name="geometry_multiPoint" />
                <button id='export' name="button" class="btn btn-primary" type="submit">Добавить в базу данных</button>
            </form>
        </div>

        <script>
                    var map = L.mapbox.map('map')
                        .setView([37.7711, -482.4424], 14);
            var urlFilesrv_world = 'http://filesrv/geodbse/giswebservicese/service.php?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=world&STYLE=default&TILEMATRIXSET=GoogleMapsCompatible&TILEMATRIX={z}&TILEROW={x}&TILECOL={y}&FORMAT=image/png8';
var settings = {
    maxZoom: 17,
    continuousWorld: true,
    attribution: 'Sourced from LINZ. CC BY 4.0',
    subdomains: 'abcd'
};
var basemaps = {
    Filesrv_world: new L.TileLayer(urlFilesrv_world, settings)
};

L.control.layers(basemaps, {}, { position: 'topright', collapsed: true }).addTo(map);
basemaps.Filesrv_world.addTo(map);
                    //// Add layers to the map
                    //L.control.layers({
                    //    'Satellite Map': L.mapbox.tileLayer('bobbysud.map-l4i2m7nd', {
                    //        detectRetina: true
                    //    }).addTo(map),
                    //    'Terrain Map': L.mapbox.tileLayer('bobbysud.i2pfp2lb', {
                    //        detectRetina: true
                    //    })
                    //}).addTo(map);

              var featureGroup = L.featureGroup().addTo(map);
            var options = {
        position: 'topright',
                draw: {
                    polyline: {
                        shapeOptions: {
                            color: '#57c2f3',
                            weight: 10
                        }
                    },
                    polygon: {

                        shapeOptions: {
                            color: '#57c2f3',
                            weight: 10


                        }
                    },
                    circle: false, // Turns off this drawing tool
                    rectangle: {
                        shapeOptions: {

                            color: '#57c2f3',
                            weight: 10

                        }

                    }
                },
                 edit: {
                            featureGroup: featureGroup
                        }
                    
                
    };
    

            




                  

                    var drawControl = new L.Control.Draw(options).addTo(map);
                    var i = 0;
                    map.on('draw:created', function (e) {

                        // Each time a feaute is created, it's added to the over arching feature group
                        featureGroup.addLayer(e.layer);

                    });


                    // on click, clear all layers
                    document.getElementById('delete').onclick = function (e) {
                        featureGroup.clearLayers();
                    }

                    document.getElementById('export').onclick = function (e) {
                        // Extract GeoJson from featureGroup
                        var data = featureGroup.toGeoJSON();
                        var combined = turf.combine(data);
                      


                        for (var i = 0; i < combined.features.length; i++) {

                            var type = combined.features[i].geometry.type;
                           
                            if (type == "MultiPolygon") {
                                var tosend_multiPolygon = JSON.stringify(combined.features[i].geometry);
                                document.getElementById('geo_multiPolygon').value = tosend_multiPolygon;
                            }
                            if (type == "MultiLineString") {

                                var tosend_multiLineString = JSON.stringify(combined.features[i].geometry);
                                document.getElementById('geo_multiLineString').value = tosend_multiLineString;
                            }
                            if (type == "MultiPoint") {
                                var tosend_multiPoint = JSON.stringify(combined.features[i].geometry);
                                document.getElementById('geo_multiPoint').value = tosend_multiPoint;
                            }

                        }
                    }
        </script>

    </div>
</body>
</html>


























